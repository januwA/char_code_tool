{"version":3,"sources":["libs/algorithm.ts","libs/util.ts","widgets/io_input.tsx","widgets/block_view.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["code2char","inputString","hook","split","filter","it","reduce","acc","String","fromCharCode","parseInt","char2code","codePointAt","toString","hex2SingleFloatingPoint","hex","data_bit","data_E","slice","data_M","data_M_10","i","length","Number","Math","pow","negative2unsignedBit","num","abs","unsignedBit2negative","movbe","iv","len","hexArr","toUpperCase","match","reverse","join","handleArrayInput","cb","IOInput","props","inputRef","useRef","outputRef","useEffect","current","value","inputValue","type","ref","onClick","handleArray","util","el","hander","btnText","BlockView","title","children","defaultProps","App","algorithm","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3d7cdece.chunk.js","sourcesContent":["/**\r\n * unicode转数字字符串\r\n * @param inputString\r\n * @param hook\r\n */\r\nexport function code2char(inputString: string, hook: number): string {\r\n  return inputString\r\n    .split(/\\s+/)\r\n    .filter((it) => !!it)\r\n    .reduce((acc, it) => {\r\n      acc += String.fromCharCode(parseInt(it, hook));\r\n      return acc;\r\n    }, \"\");\r\n}\r\n\r\n/**\r\n * 字符串转unicode数字\r\n * @param inputString\r\n * @param hook\r\n */\r\nexport function char2code(inputString: string, hook: number): string {\r\n  return inputString.split(\"\").reduce((acc, it: any) => {\r\n    acc += it.codePointAt(0).toString(hook) + \" \";\r\n    return acc;\r\n  }, \"\");\r\n}\r\n\r\n/**\r\n * 16进制转单浮点\r\n * @param hex\r\n */\r\nexport function hex2SingleFloatingPoint(hex: string): number {\r\n  // https://blog.csdn.net/qq_19286023/article/details/72651568\r\n  const data_bit = parseInt(hex, 16).toString(2); //16进制转2进制\r\n  const data_E = parseInt(data_bit.slice(0, 8), 2); //slice表示数组的截取，并转化为十进制数\r\n  const data_M: string = data_bit.slice(8, 64);\r\n  var data_M_10 = 0.0;\r\n  for (var i = 0; i < data_M.length; i++) {\r\n    data_M_10 = data_M_10 + Number(data_M[i]) * Math.pow(2, -1 * (i + 1));\r\n  }\r\n  return Math.pow(2, data_E - 127) * (1 + data_M_10);\r\n}\r\n\r\n/**\r\n * 负数转无符号位\r\n * @param num\r\n */\r\nexport function negative2unsignedBit(num: number): number {\r\n  return 2 ** 32 - Math.abs(Number(num));\r\n}\r\n\r\n/**\r\n * 无符号位转负数\r\n * @param num\r\n */\r\nexport function unsignedBit2negative(num: number): number {\r\n  return Number(num) - 2 ** 32;\r\n}\r\n\r\n/**\r\n * movbe eax,#10\r\n * eax == 0x0A000000\r\n */\r\nexport function movbe(iv: number): string {\r\n  let hex = iv.toString(16);\r\n  const len = 8 - hex.length;\r\n  for (let i = 0; i < len; i++) {\r\n    hex = \"0\" + hex;\r\n  }\r\n  hex = hex.toUpperCase()\r\n  const hexArr = hex.match(/([0-9a-z]){2}/ig);\r\n  if(!hexArr) return '0';\r\n  return hexArr.reverse().join('');\r\n}","export function handleArrayInput(iv: string, cb: (el: string) => any): string {\r\n  const inputArray: string[] = iv.split(/\\s+/);\r\n  return inputArray.reduce((acc: string, i: string) => {\r\n    let space = acc.length ? \" \" : \"\";\r\n    acc += space + cb(i);\r\n    return acc;\r\n  }, \"\");\r\n}","import React, { useRef, useEffect } from \"react\";\r\nimport { util } from \"../libs\";\r\n\r\nexport interface IOInputProps {\r\n  inputValue?: string;\r\n  btnText: string;\r\n  hander: (inputValue: string) => string | number;\r\n  handleArray?: boolean;\r\n}\r\n\r\nexport function IOInput(props: IOInputProps) {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const outputRef = useRef<HTMLInputElement>(null);\r\n  const onClick = () => {\r\n    const iv = inputRef.current?.value ?? \"\";\r\n    outputRef.current!.value =\r\n      props.handleArray ?? true\r\n        ? util.handleArrayInput(iv, (el) => props.hander(el).toString())\r\n        : props.hander(iv).toString();\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current!.value = props.inputValue || \"\";\r\n    return () => {\r\n      // dispose\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" ref={inputRef} />\r\n      <button onClick={onClick}>{props.btnText}</button>\r\n      <input type=\"text\" ref={outputRef} />\r\n    </div>\r\n  );\r\n}\r\nIOInput.defaultProps = {\r\n  handleArray: true,\r\n};\r\n","import React from \"react\";\r\nexport interface BlockViewProps {\r\n  title: string;\r\n  children: any;\r\n}\r\n\r\nexport function BlockView(props: BlockViewProps) {\r\n  return (\r\n    <section>\r\n      <h1>{props.title}</h1>\r\n      {props.children}\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { IOInput } from \"./widgets/io_input\";\nimport { algorithm } from \"./libs\";\nimport { BlockView } from \"./widgets/block_view\";\nfunction App() {\n  return (\n    <>\n      <BlockView title=\"char to code\">\n        <IOInput\n          btnText=\"字符串 to 10进制\"\n          inputValue=\"成都\"\n          hander={(iv: string) => algorithm.char2code(iv, 10)}\n        ></IOInput>\n        <IOInput\n          btnText=\"字符串 to 16进制\"\n          inputValue=\"成都\"\n          hander={(iv: string) => algorithm.char2code(iv, 16)}\n        ></IOInput>\n      </BlockView>\n\n      <BlockView title=\"code to char\">\n        <IOInput\n          btnText=\"10进制 to 字符串\"\n          inputValue=\"25104 37117\"\n          hander={(iv: string) => algorithm.code2char(iv, 10)}\n        ></IOInput>\n        <IOInput\n          btnText=\"16进制 to 字符串\"\n          inputValue=\"6210 90fd\"\n          hander={(iv: string) => algorithm.code2char(iv, 16)}\n        ></IOInput>\n      </BlockView>\n\n      <BlockView title=\"16进制转单浮点\">\n        <IOInput\n          btnText=\"16进制 to 单浮点\"\n          inputValue=\"43290000\"\n          hander={(iv: string) => algorithm.hex2SingleFloatingPoint(iv)}\n        ></IOInput>\n      </BlockView>\n\n      <BlockView title=\"负数与无符号位的转换\">\n        <IOInput\n          btnText=\"负数 to 无符号位\"\n          inputValue=\"-2000\"\n          hander={(iv: string) => algorithm.negative2unsignedBit(Number(iv))}\n        ></IOInput>\n        <IOInput\n          btnText=\"无符号位 to 负数\"\n          inputValue=\"4294965296\"\n          hander={(iv: string) => algorithm.unsignedBit2negative(Number(iv))}\n        ></IOInput>\n      </BlockView>\n      <BlockView title=\"write movbe\">\n        <IOInput\n          btnText=\"10进制 => movbe => 16进制\"\n          inputValue=\"10\"\n          hander={(iv: string) => algorithm.movbe(Number(iv))}\n        ></IOInput>\n        <IOInput\n          btnText=\"10进制 => movbe => 10进制\"\n          inputValue=\"10\"\n          hander={(iv: string) =>\n            parseInt(algorithm.movbe(Number(iv)), 16).toString()\n          }\n        ></IOInput>\n      </BlockView>\n      <BlockView title=\"read movbe\">\n        <IOInput\n          btnText=\"16进制 => movbe => 10进制\"\n          inputValue=\"0A000000\"\n          hander={(iv: string) =>\n            parseInt(algorithm.movbe(parseInt(iv, 16)), 16).toString()\n          }\n        ></IOInput>\n        <IOInput\n          btnText=\"10进制 => movbe => 10进制\"\n          inputValue=\"167772160\"\n          hander={(iv: string) =>\n            parseInt(algorithm.movbe(Number(iv)), 16).toString()\n          }\n        ></IOInput>\n      </BlockView>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}